#code
#Time Complexity: O(N)

class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        left,right=0,1
        maximum_profit=0
        while right<len(prices):
            if prices[left]<prices[right]:
                profit=prices[right]-prices[left]
                maximum_profit=max(maximum_profit,profit)
            else:
                left=right
            right+=1
        return maximum_profit


#Code

prices=list(map(int,input().split()))
left,right=0,1
maximum_profit=0
while right<len(prices):
    if prices[left]<prices[right]:
        profit=prices[right]-prices[left]
        maximum_profit=max(maximum_profit,profit)
    else:
        left=right
    right+=1
print(maximum_profit)

Input: 1 2
Output: 1
