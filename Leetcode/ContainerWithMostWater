#Code

#Optimal Solution
#Time Complexity:O(N)

class Solution:
    def maxArea(self, height: List[int]) -> int:
        result=0
        left=0
        right=len(height)-1
        while left<right:
            area=(right-left)*min(height[left],height[right])
            result=max(area,result)
            if(height[left]<height[right]):
                left+=1
            else:
                right-=1
        return result
            
#Brute Force
#Time Complexity : O(N^2)

for i in range(len(list)):
    for j in range(i+1,len(list)):
        area=((j-i)*min(height[i],height[j]))
        res=max(res,area)
return res
            
